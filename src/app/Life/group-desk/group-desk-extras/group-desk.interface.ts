interface IPolicy {
    id: number;
    seqNo?: any;
    iterations: number;
    premFreq: string;
    modifiedOn?: any;
    modifiedUser?: any;
    paidToDate?: any;
    coverCode: string;
    ownerClientNo: string;
    ownerCrmClientNo: string;
    quotedOn?: any;
    commenceDate: string;
    quoteValidDays: string;
    conversionProb: number;
    busLine: string;
    productClass: string;
    insType: string;
    companyCode: string;
    branchCode: string;
    currency: string;
    uwPending: boolean;
    externalRef: string;
    ownerName: string;
    jointOwnerName: string;
    productCode: string;
    policyTermMo: number;
    quoteStatus: string;
    policyNo: string;
    issuedOn?: any;
    totalPeriodicPremium: number;
    saIndexTable: string;
    premIndexTable: string;
    premEscalationRate: number;
    noOfLives: number;
    noOfCovers: number;
    authBy: string;
    authOn?: any;
    daysToQuoteExpiry: number;
    grouped: boolean;
    quoteNo: string;
    applDate: string;
    policyTermDays: number;
    payinMethod: string;
    convertToPolicy: boolean;
    tmId: string;
    discCode: boolean;
    policyStatus: string;
    issueOwnerAge: number;
    convertBasis: string;
    renewalDueOn: string;
    noOfAssets: number;
    referrerNo: string;
    convertedOn?: any;
    policyCode: string;
    renewedOn?: any;
    policyNoSuffix: string;
    policyGroupId?: any;
    quotedByAgent: boolean;
    quotedByClient: boolean;
    quotedByStaff: boolean;
    createdBy: string;
    totalSar: number;
    premiumDue: number;
    premiumPaid: number;
    premiumTarget: number;
    inSuspense: number;
    outSuspense: number;
    payinFreq: string;
    examination: boolean;
    annuityOnClaimEscalRate?: any;
    annuityOnClaimFreq: string;
    annuityOnClaimTermFreq: string;
    annuityOnClaimTermMonths: number;
    automaticPremiumLoan: boolean;
    clientCategory: string;
    convertReason?: any;
    code?: any;
    convertToProd?: any;
    daysToExpiry: number;
    issueAge: number;
    jointOwner: string;
    loanIntRate: number;
    premPayTermMo: number;
    premiumLoanPeriod: number;
    renewalDate?: any;
    createdOn: Date;
    sumAtRisk?: any;
    annualisedPremium?: any;
    agentNo?: any;
    quoteAuth: boolean;
    rm?: any;
    srm: string;
    quoteAuthBy: string;
    quoteAuthOn?: any;
    inComplete: boolean;
    convertedBy: string;
    alpha: string;
    groupNo: string;
    benefitAssignedTo?: any;
    ownerPortion: number;
    fcl: string;
    nonMedicalLimit?: any;
    payerAccount?: any;
    commenceOn: Date;
    applOn: Date;
    coverEndOn?: any;
    group: boolean;
    primaryAgent: string;
    loanBalance: number;
    payeeAccount?: any;
}

interface IGroup {
    id: number;
    quoteNo: string;
    seqNo: number;
    coverCode: string;
    groupNo: string;
    aggregateQuote: boolean;
    annualPremium: number;
    catastrophicEventLimit: number;
    coinsured: boolean;
    maintainedByUser: string;
    aggAverageAge: number;
    aggEnroleeCount: number;
    relManager: string;
    subRelManager: string;
    sector: string;
    saBasis: string;
    policyNo: string;
    subGroupNo: string;
    subGroupName: string;
    fcl: number;
    declaration: boolean;
    policyCode: string;
    prodClass: string;
    productCode: string;
    parentCompany: string;
    groupIssueDate: Date;
    aggAssetCount: number;
    groupSaBasis: string;
    aggSumAssured: number;
    base: boolean;
    policyId: number;
    retireAge: number;
    groupSaBasisValue?: any;
    groupOwner: string;
    groupStatus: string;
}

interface IGroupCoin {
    id: number;
    coInsurer: string;
    leader: boolean;
    policyCode: string;
    quoteNo: string;
    policyNo: string;
    seqNo: string;
    policyGroupId: number;
    groupNo: string;
    coInsureShare: number;
    self: boolean;
}

interface ICover {
    id: number;
    quoteNo: string;
    seqNo: number;
    guarYield: number;
    assured: string;
    relLifeAssured?: any;
    commType: string;
    coverNo: number;
    busLine: string;
    productClass: string;
    insType: string;
    benPayBasis?: any;
    coverTermMo: number;
    coverTermDays: number;
    renewalAge: number;
    coverPremFreq: string;
    issueAge: number;
    coverPremPayMeth: string;
    policyId: number;
    coverPremium: number;
    loanIntRate: number;
    commRate: number;
    fcl: number;
    nonMedicalLimit: number;
    benSchedule: boolean;
    benScheduleBasis?: any;
    policyTermDays: number;
    assetId: number;
    payG?: any;
    premPayMeth: string;
    funded: boolean;
    renewalAssetAge?: any;
    deposit?: any;
    premFactor?: any;
    premiumToBen?: any;
    premPayTermMo?: any;
    premPayFreq: string;
    policyNoSuffix: number;
    coverRenewalDueOn: string;
    sar: number;
    issueAssetAge?: any;
    applYear?: any;
    productCode: string;
    policyNo: string;
    policyCode: string;
    groupNo: string;
    memberNo?: any;
    enroleeNo: string;
    suffix?: any;
    premiumDue: number;
    paidFromDate?: any;
    currency: string;
    coverRenewedOn?: any;
    premiumPaid?: any;
    saBasis: string;
    premiumTarget?: any;
    initialBaseCoverSa?: any;
    loanRepayFreq?: any;
    benPayFreq?: any;
    gmv?: any;
    escalContinuePost?: any;
    premPayTermDays?: any;
    benPayTermDays?: any;
    benPayTermMo?: any;
    description: string;
    assuredName: string;
    base: boolean;
    subgroupNo?: any;
    subgroupName?: any;
    assetRedgNo: string;
    companyCode: string;
    branchCode: string;
    depAdmin: boolean;
    commEarnPeriod?: any;
    emv?: any;
    definedBen: number;
    enroleeNoSuffix?: any;
    commEarnBasis?: any;
    monthlyIncome?: any;
    assuredRelToOwner?: any;
    coverDescription: string;
    paidToDate: string;
    code: string;
    sumAssured: number;
    initialSumAssured: number;
    uncoveredSar?: any;
    discCode?: any;
    benEscalRate?: any;
    issueDate: string;
    coverStartDate: string;
    coverEndDate?: any;
    stFactor?: any;
    excess?: any;
    deductible?: any;
    aggSumAssured?: any;
    saEscalRate?: any;
    quoteValidBasis?: any;
    quoteValidDays?: any;
    noPremPayInYr?: any;
    noPremPayInLife?: any;
    anniversary?: any;
    inComplete: boolean;
    alpha: string;
    issueOn: Date;
    coverEndOn?: any;
    agentNo?: any;
    excessRate?: any;
    excessMin?: any;
    deductRate?: any;
    deductMin?: any;
    sumAtRisk: number;
    convertReason: string;
    groupSaBasis: string;
    groupSaBasisValue: string;
    coverStatus?: any;
    noPayMade: number;
    noAssets: number;
    noMembers: number;
}

interface IGroupList {
    id: number;
    applYear?: any;
    assetId: string;
    assetRedgNo: string;
    assured: string;
    assuredName: string;
    base?: any;
    benEscalRate?: any;
    benPayBasis?: any;
    benPayFreq?: any;
    benPayTerm?: any;
    benSchedule?: any;
    benScheduleBasis?: any;
    busLine?: any;
    commRate?: any;
    commType?: any;
    coverCode: string;
    coverEndOn?: any;
    coverNo?: any;
    coverPremFreq?: any;
    coverPremPayMeth?: any;
    coverPremium?: any;
    coverStartOn: Date;
    coverTermDays?: any;
    coverTermMo?: any;
    currency?: any;
    deductible?: any;
    deposit?: any;
    discCode?: any;
    enroleeNo?: any;
    escalPostClaim?: any;
    excess?: any;
    fcl?: any;
    groupNo: string;
    initialSumAssured: number;
    insType?: any;
    issueAge?: any;
    issueAssetAge?: any;
    issuedOn?: any;
    loanIntRate: number;
    loanRepayFreq?: any;
    mthlyIncome?: any;
    nonMedicalLimit?: any;
    paidToDate?: any;
    payg?: any;
    policyCode: string;
    policyNo: string;
    policyTermDays?: any;
    premFactor?: any;
    premPayFreq?: any;
    premPayMeth?: any;
    premPayTermDays?: any;
    premPayTermMo?: any;
    premiumToBen?: any;
    productClass?: any;
    productCode?: any;
    quoteNo: string;
    saBasis?: any;
    saEscalRate?: any;
    stFactor?: any;
    subGroupName?: any;
    subGroupNo: string;
    sumAssured?: any;
    uncoveredSar?: any;
    paidFromDate?: any;
    definedBen?: any;
    emv?: any;
    commEarnBasis?: any;
    commEarnPeriod?: any;
    policyNoSuffix: string;
    policyGroupId: number;
    depAdmin?: any;
    assuredRelToOwner?: any;
    policyId: number;
    enroleeNoSuffix?: any;
    coverDescription?: any;
    renewalAge?: any;
    funded?: any;
    coverRenewalDueOn?: any;
    renewalAssetAge?: any;
    sar?: any;
    companyCode?: any;
    branchCode?: any;
    premiumDue?: any;
    premiumPaid?: any;
    premiumTarget?: any;
    guarYield?: any;
    gmv?: any;
    relLifeAssured?: any;
    pricingBasis?: any;
    saEscalRateBefore?: any;
    saEscalRatePost?: any;
    amortisationBasis?: any;
    annualIncome?: any;
    matConvertTo?: any;
    noPremPayInYr?: any;
    noPremPayInLife?: any;
    anniversary?: any;
    inComplete?: any;
    alpha: string;
    memberClientNo: string;
    relBasis?: any;
    relatedTo?: any;
    relType?: any;
    staffNo?: any;
    idNo?: any;
    excessRate?: any;
    deductRate?: any;
    uwPending?: any;
}

export interface IGroupDesk {
    policy: IPolicy;
    group: IGroup;
    groupCoins: IGroupCoin[];
    covers: ICover[];
    agentInfo?: any;
    groupList: IGroupList[];
    quoteNo?: any;
    totalPremium?: any;
    premFreq?: any;
    ownerClientNo?: any;
}
